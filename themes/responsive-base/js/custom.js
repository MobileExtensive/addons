/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fireEvent = fireEvent;\nexports.toggleScroll = toggleScroll;\nexports.disableScroll = disableScroll;\nexports.enableScroll = enableScroll;\nfunction fireEvent(element, eventName, options) {\n    var event;\n    if (window.CustomEvent) {\n        event = new CustomEvent(eventName, options);\n    } else {\n        event = document.createEvent(\"CustomEvent\");\n        event.initCustomEvent(eventName, true, true, options);\n    }\n    element.dispatchEvent(event);\n}\n\nfunction toggleScroll() {\n    if ($(\"body\")[0].style.overflow) {\n        enableScroll();\n    } else {\n        disableScroll();\n    }\n}\n\nfunction disableScroll() {\n    $(\"body\").addClass(\"NoScroll\");\n}\n\nfunction enableScroll() {\n    $(\"body\").removeClass(\"NoScroll\");\n}\n\n/**\n * Provides requestAnimationFrame in a cross browser way.\n */\n\nif (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function () {\n        return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (\n        /* function FrameRequestCallback */callback,\n        /* DOMElement Element */element) {\n            window.setTimeout(callback, 1000 / 60);\n        };\n    }();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2dpdC9vdmFyaWFuY2FuYWRhL3RoZW1lcy9vdmFyaWFuY2FuYWRhL3NyYy9qcy91dGlsaXR5LmpzP2E0NGMiXSwibmFtZXMiOlsiZmlyZUV2ZW50IiwidG9nZ2xlU2Nyb2xsIiwiZGlzYWJsZVNjcm9sbCIsImVuYWJsZVNjcm9sbCIsImVsZW1lbnQiLCJldmVudE5hbWUiLCJvcHRpb25zIiwiZXZlbnQiLCJ3aW5kb3ciLCJDdXN0b21FdmVudCIsImRvY3VtZW50IiwiY3JlYXRlRXZlbnQiLCJpbml0Q3VzdG9tRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiJCIsInN0eWxlIiwib3ZlcmZsb3ciLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwid2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwib1JlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FsbGJhY2siLCJzZXRUaW1lb3V0Il0sIm1hcHBpbmdzIjoiOzs7OztRQUFnQkEsUyxHQUFBQSxTO1FBV0FDLFksR0FBQUEsWTtRQVFBQyxhLEdBQUFBLGE7UUFJQUMsWSxHQUFBQSxZO0FBdkJULFNBQVNILFNBQVQsQ0FBbUJJLE9BQW5CLEVBQTRCQyxTQUE1QixFQUF1Q0MsT0FBdkMsRUFBZ0Q7QUFDbkQsUUFBSUMsS0FBSjtBQUNBLFFBQUlDLE9BQU9DLFdBQVgsRUFBd0I7QUFDcEJGLGdCQUFRLElBQUlFLFdBQUosQ0FBZ0JKLFNBQWhCLEVBQTJCQyxPQUEzQixDQUFSO0FBQ0gsS0FGRCxNQUVPO0FBQ0hDLGdCQUFRRyxTQUFTQyxXQUFULENBQXFCLGFBQXJCLENBQVI7QUFDQUosY0FBTUssZUFBTixDQUFzQlAsU0FBdEIsRUFBaUMsSUFBakMsRUFBdUMsSUFBdkMsRUFBNkNDLE9BQTdDO0FBQ0g7QUFDREYsWUFBUVMsYUFBUixDQUFzQk4sS0FBdEI7QUFDSDs7QUFFTSxTQUFTTixZQUFULEdBQXdCO0FBQzNCLFFBQUlhLEVBQUUsTUFBRixFQUFVLENBQVYsRUFBYUMsS0FBYixDQUFtQkMsUUFBdkIsRUFBaUM7QUFDN0JiO0FBQ0gsS0FGRCxNQUVPO0FBQ0hEO0FBQ0g7QUFDSjs7QUFFTSxTQUFTQSxhQUFULEdBQXlCO0FBQzVCWSxNQUFFLE1BQUYsRUFBVUcsUUFBVixDQUFtQixVQUFuQjtBQUNIOztBQUVNLFNBQVNkLFlBQVQsR0FBd0I7QUFDM0JXLE1BQUUsTUFBRixFQUFVSSxXQUFWLENBQXNCLFVBQXRCO0FBQ0g7O0FBRUQ7Ozs7QUFJQSxJQUFJLENBQUNWLE9BQU9XLHFCQUFaLEVBQW1DO0FBQy9CWCxXQUFPVyxxQkFBUCxHQUFnQyxZQUFXO0FBQ3ZDLGVBQ0lYLE9BQU9ZLDJCQUFQLElBQ0FaLE9BQU9hLHdCQURQLElBRUFiLE9BQU9jLHNCQUZQLElBR0FkLE9BQU9lLHVCQUhQLElBSUE7QUFDSSwyQ0FBb0NDLFFBRHhDO0FBRUksZ0NBQXlCcEIsT0FGN0IsRUFHRTtBQUNFSSxtQkFBT2lCLFVBQVAsQ0FBa0JELFFBQWxCLEVBQTRCLE9BQU8sRUFBbkM7QUFDSCxTQVZMO0FBWUgsS0FiOEIsRUFBL0I7QUFjSCIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGZpcmVFdmVudChlbGVtZW50LCBldmVudE5hbWUsIG9wdGlvbnMpIHtcbiAgICB2YXIgZXZlbnQ7XG4gICAgaWYgKHdpbmRvdy5DdXN0b21FdmVudCkge1xuICAgICAgICBldmVudCA9IG5ldyBDdXN0b21FdmVudChldmVudE5hbWUsIG9wdGlvbnMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJDdXN0b21FdmVudFwiKTtcbiAgICAgICAgZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwgdHJ1ZSwgdHJ1ZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVTY3JvbGwoKSB7XG4gICAgaWYgKCQoXCJib2R5XCIpWzBdLnN0eWxlLm92ZXJmbG93KSB7XG4gICAgICAgIGVuYWJsZVNjcm9sbCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGRpc2FibGVTY3JvbGwoKTtcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNhYmxlU2Nyb2xsKCkge1xuICAgICQoXCJib2R5XCIpLmFkZENsYXNzKFwiTm9TY3JvbGxcIik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbmFibGVTY3JvbGwoKSB7XG4gICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoXCJOb1Njcm9sbFwiKTtcbn1cblxuLyoqXG4gKiBQcm92aWRlcyByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgaW4gYSBjcm9zcyBicm93c2VyIHdheS5cbiAqL1xuXG5pZiAoIXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUpIHtcbiAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gKGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICAgICAgd2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICAgICAgd2luZG93Lm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcbiAgICAgICAgICAgIHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24oXG4gICAgICAgICAgICAgICAgLyogZnVuY3Rpb24gRnJhbWVSZXF1ZXN0Q2FsbGJhY2sgKi8gY2FsbGJhY2ssXG4gICAgICAgICAgICAgICAgLyogRE9NRWxlbWVudCBFbGVtZW50ICovIGVsZW1lbnRcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGNhbGxiYWNrLCAxMDAwIC8gNjApO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH0pKCk7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gL2dpdC9vdmFyaWFuY2FuYWRhL3RoZW1lcy9vdmFyaWFuY2FuYWRhL3NyYy9qcy91dGlsaXR5LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _header = __webpack_require__(2);\n\nvar _overrides = __webpack_require__(3);\n\n$(function () {\n    (0, _header.setupHeader)();\n    (0, _overrides.fixToggleFlyoutBehaviour)();\n\n    $('select').wrap('<div class=\"SelectWrapper\"></div>');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2dpdC9vdmFyaWFuY2FuYWRhL3RoZW1lcy9vdmFyaWFuY2FuYWRhL3NyYy9qcy9pbmRleC5qcz8wNDAwIl0sIm5hbWVzIjpbIiQiLCJ3cmFwIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUVBQSxFQUFFLFlBQU07QUFDSjtBQUNBOztBQUVBQSxNQUFFLFFBQUYsRUFBWUMsSUFBWixDQUFpQixtQ0FBakI7QUFDSCxDQUxEIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3NldHVwSGVhZGVyfSBmcm9tICcuL2hlYWRlcic7XG5pbXBvcnQge2ZpeFRvZ2dsZUZseW91dEJlaGF2aW91cn0gZnJvbSAnLi9vdmVycmlkZXMnO1xuXG4kKCgpID0+IHtcbiAgICBzZXR1cEhlYWRlcigpO1xuICAgIGZpeFRvZ2dsZUZseW91dEJlaGF2aW91cigpO1xuXG4gICAgJCgnc2VsZWN0Jykud3JhcCgnPGRpdiBjbGFzcz1cIlNlbGVjdFdyYXBwZXJcIj48L2Rpdj4nKVxufSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gL2dpdC9vdmFyaWFuY2FuYWRhL3RoZW1lcy9vdmFyaWFuY2FuYWRhL3NyYy9qcy9pbmRleC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setupHeader = setupHeader;\n\nvar _utility = __webpack_require__(0);\n\n/**\n * Call this event on the window in order to collapse default collapsing elements.\n *\n * fireEvent(window, EVENT_COLLAPSE_DEFAULTS);\n */\nvar EVENT_COLLAPSE_DEFAULTS = \"vanilla_collapse_defaults\";\n\n// Strings to represent the current state in a data-attribute\nvar STATE_CLOSED = \"CLOSED\";\nvar STATE_OPEN = \"OPEN\";\n\nfunction setupHeader() {\n    initNavigationDropdown();\n    initCategoriesModule();\n    (0, _utility.fireEvent)(window, EVENT_COLLAPSE_DEFAULTS);\n    initNavigationVisibility();\n}\n\nfunction initNavigationListeners() {\n    var $navigation = $('#navdrawer');\n    var className = 'isStuck';\n\n    var setupListener = function setupListener() {\n        var offset = $navigation.offset().top;\n\n        $(window).on('scroll', function () {\n            window.requestAnimationFrame(function () {\n                if (!$navigation.hasClass(className) && $(window).scrollTop() >= offset) {\n                    $navigation.addClass(className);\n                } else if ($navigation.hasClass(className)) {\n                    $navigation.removeClass(className);\n                }\n            });\n        });\n    };\n}\n\n/**\n * Initialize the mobile menu open/close listeners\n */\nfunction initNavigationDropdown() {\n    var $menuButton = $(\"#menu-button\");\n    var $menuList = $(\"#navdrawer\");\n    setupBetterHeightTransitions($menuList, $menuButton, true);\n}\n\n/**\n * Initialize the listeners for the accordian style categories module\n */\nfunction initCategoriesModule() {\n    var $children = $(\".CategoriesModule-children\");\n    var $chevrons = $(\".CategoriesModule-chevron\");\n\n    $chevrons.each(function (index, chevron) {\n        var $chevron = $(chevron);\n        var $childList = $chevron.parent().parent().find(\".CategoriesModule-children\").first();\n        setupBetterHeightTransitions($childList, $chevron, true);\n    });\n}\n\n/**\n * Initialzie the navigation menus visibility.\n *\n * We initially hide all of the nav items while the measure themselves,\n * then move to their initial states. By default they are hidden,\n * This overrides the baked in hiding styles.\n */\nfunction initNavigationVisibility() {\n    var $nav = $(\"#navdrawer\");\n    $nav.css({ position: \"relative\", visibility: \"visible\" });\n    $nav.addClass('isReadyToTransition');\n}\n\n/**\n * Measure approximate real heights of an element and store/use it\n * to have a more accurate max-height transition.\n *\n * @param {any} $elementToMeasure\n * @param {any} toState\n */\nfunction applyNewElementMeasurements($elementToMeasure, toState) {\n    var trueHeight = $elementToMeasure.outerHeight() + \"px\";\n    var previouslyCalculatedOldHeight = $elementToMeasure.attr(\"data-true-height\");\n\n    if (!previouslyCalculatedOldHeight) {\n        $elementToMeasure.attr(\"data-true-height\", trueHeight);\n    }\n\n    $elementToMeasure.attr(\"data-valid-open-state\", false);\n\n    if (toState === STATE_CLOSED) {\n        $elementToMeasure.attr(\"data-valid-open-state\", false);\n        $elementToMeasure.css(\"overflow\", \"hidden\");\n        $elementToMeasure.css(\"max-height\", \"0px\");\n    } else if (toState === STATE_OPEN) {\n        $elementToMeasure.attr(\"data-valid-open-state\", true);\n        $elementToMeasure.css(\"max-height\", $elementToMeasure.attr(\"data-true-height\"));\n        $elementToMeasure.on(\"transitionend\", function handler() {\n            if ($elementToMeasure.attr(\"data-valid-open-state\") === \"true\") {\n                $elementToMeasure.css(\"overflow\", \"visible\");\n                $elementToMeasure.off(\"transitionend\", handler);\n            }\n        });\n    }\n\n    $elementToMeasure.attr(\"data-state\", toState);\n}\n\n/**\n * Setup a more accurate max-height transition on an element to be triggered by another element.\n *\n * @param {jquery.element} $elementToMeasure The jquery element to measure\n * @param {jquery.element} $triggeringElement The jquery element that triggers the transition\n * @param {boolean} collapseByDefault whether or not to collapse the element by default. This will happen after everything has been measured and you fire the EVENT_COLLAPSE_DEFAULTS from the window\n */\nfunction setupBetterHeightTransitions($elementToMeasure, $triggeringElement, collapseByDefault) {\n    applyNewElementMeasurements($elementToMeasure, STATE_OPEN);\n\n    $triggeringElement.on(\"click\", function () {\n        var elementState = $elementToMeasure.attr(\"data-state\");\n\n        if (elementState === STATE_CLOSED) {\n            $triggeringElement.toggleClass(\"isToggled\");\n            applyNewElementMeasurements($elementToMeasure, STATE_OPEN);\n        } else if (elementState === STATE_OPEN) {\n            $triggeringElement.toggleClass(\"isToggled\");\n            applyNewElementMeasurements($elementToMeasure, STATE_CLOSED);\n        }\n    });\n\n    if (collapseByDefault) {\n        window.addEventListener(EVENT_COLLAPSE_DEFAULTS, function () {\n            applyNewElementMeasurements($elementToMeasure, STATE_CLOSED);\n        });\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fixToggleFlyoutBehaviour = fixToggleFlyoutBehaviour;\n\nvar _utility = __webpack_require__(0);\n\n/**\n * Resets this listener\n * https://github.com/vanilla/vanilla/blob/f751e382da325e05784ba918016b1af2902f3c3a/js/global.js#L790\n * in order to work visibility:hidden instead of display:none\n *\n * The main js file should not rely on certain CSS styles!!!\n */\nfunction fixToggleFlyoutBehaviour() {\n    $(document).undelegate(\".ToggleFlyout\", \"click\");\n    var lastOpen = null;\n    $(document).delegate(\".ToggleFlyout\", \"click\", function (e) {\n        var $flyout = $(\".Flyout\", this);\n        var isHandle = false;\n\n        if ($(e.target).closest(\".Flyout\").length === 0) {\n            e.stopPropagation();\n            isHandle = true;\n        } else if ($(e.target).hasClass(\"Hijack\") || $(e.target).closest(\"a\").hasClass(\"Hijack\")) {\n            return;\n        }\n        e.stopPropagation();\n\n        // Dynamically fill the flyout.\n        var rel = $(this).attr(\"rel\");\n        if (rel) {\n            $(this).attr(\"rel\", \"\");\n            $flyout.html('<div class=\"InProgress\" style=\"height: 30px\"></div>');\n\n            $.ajax({\n                url: gdn.url(rel),\n                data: { DeliveryType: \"VIEW\" },\n                success: function success(data) {\n                    $flyout.html(data);\n                },\n                error: function error(xhr) {\n                    $flyout.html(\"\");\n                    gdn.informError(xhr, true);\n                }\n            });\n        }\n\n        if ($flyout.css(\"visibility\") == \"hidden\") {\n            if (lastOpen !== null) {\n                $(\".Flyout\", lastOpen).hide();\n                $(lastOpen).removeClass(\"Open\").closest(\".Item\").removeClass(\"Open\");\n            }\n\n            $(this).addClass(\"Open\").closest(\".Item\").addClass(\"Open\");\n            $flyout.show();\n            (0, _utility.disableScroll)();\n            lastOpen = this;\n        } else {\n            $flyout.hide();\n            $(this).removeClass(\"Open\").closest(\".Item\").removeClass(\"Open\");\n            (0, _utility.enableScroll)();\n        }\n\n        if (isHandle) return false;\n    });\n\n    // Close ToggleFlyout menu even if their links are hijacked\n    $(document).delegate('.ToggleFlyout a', 'mouseup', function () {\n        if ($(this).hasClass('FlyoutButton')) return;\n\n        $('.ToggleFlyout').removeClass('Open').closest('.Item').removeClass('Open');\n        $('.Flyout').hide();\n    });\n\n    $(document).delegate(document, 'click', function () {\n        if (lastOpen) {\n            $('.Flyout', lastOpen).hide();\n            $(lastOpen).removeClass('Open').closest('.Item').removeClass('Open');\n        }\n        $('.ButtonGroup').removeClass('Open');\n    });\n\n    $('.Button.Primary.Handle').on('click', function () {\n        (0, _utility.disableScroll)();\n    });\n\n    $('.Dropdown').on('click', function () {\n        (0, _utility.enableScroll)();\n    });\n\n    $('.Options .Flyout').on('click', function () {\n        (0, _utility.enableScroll)();\n    });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ })
/******/ ]);